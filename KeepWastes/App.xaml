<Application x:Class="KeepWastes.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:KeepWastes.ViewModel"
             StartupUri="MainWindow.xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters1="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">
  <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Material Design/Calendar.xaml" />
                <ResourceDictionary Source="Material Design/ValidationError1.xaml" />
            </ResourceDictionary.MergedDictionaries>

   

            <converters1:TextFieldHintVisibilityConverter x:Key="TextFieldHintVisibilityConverter" />

            <Style x:Key="MaterialDesignTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0 0 0 0" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
                <Setter Property="materialDesign:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
                <!-- cludge the default context menu -->
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Header="_Cut" Command="Cut">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentCut"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Copy" Command="Copy">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentCopy" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Paste" Command="Paste">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentPaste"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="textFieldBoxBorder"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0 0 0 3"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                            
                                    Padding="0 2 0 4">
                                        <Grid x:Name="textFieldGrid"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                  />
                                            <materialDesign:SmartHint x:Name="Hint"
                                                   Hint="{Binding Path=(materialDesign:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                                   HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters1:HintProxyFabricConverter.Instance}}"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Padding="{TemplateBinding Padding}"
                                                   HintOpacity="{Binding Path=(materialDesign:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                   UseFloating="{Binding Path=(materialDesign:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                                   FloatingScale="{Binding Path=(materialDesign:HintAssist.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                                   FloatingOffset="{Binding Path=(materialDesign:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"                                               
                                                   />
                                        </Grid>
                                    </Border>
                                    <Line x:Name="DashedLine" VerticalAlignment="Bottom" Visibility="Hidden"
                                  StrokeThickness="1.25" StrokeDashArray="1,2.5" StrokeDashCap="Round"
                                  X1="0" X2="{Binding ActualWidth, ElementName=border}" Y1="0" Y2="0" 
                                  Stroke="{TemplateBinding BorderBrush}" Opacity="0.56" />
                                    <materialDesign:Underline x:Name="Underline" Visibility="{Binding Path=(materialDesign:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                    <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                                </MultiTrigger>
                                <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                                    <Setter TargetName="border" Property="Margin" Value="0 12 0 0" />
                                </Trigger>
                                <Trigger Property="materialDesign:TextFieldAssist.HasTextFieldBox" Value="True">
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
                                    <Setter TargetName="textFieldBoxBorder" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                                    <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    <Setter TargetName="Underline" Property="CornerRadius" Value="0,0,4,4" />
                                    <Setter TargetName="Hint" Property="Margin" Value="0,0,0,16" />
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                                </Trigger>
                                <Trigger Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True">
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="textFieldBoxBorder" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-1" />
                                    <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Hint" Property="Margin" Value="0,0,0,16" />
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="border" Value="0.42"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="False" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextFieldBox" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="DashedLine" Property="Visibility" Value="Visible" />
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Validation.HasError" Value="True" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="MaterialDesignPasswordBox" TargetType="{x:Type PasswordBox}">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0 0 0 0" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="CaretBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
                <Setter Property="materialDesign:TextFieldAssist.IncludeSpellingSuggestions" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
                <!-- cludge the default context menu -->
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Header="_Cut" Command="Cut">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentCut"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Copy" Command="Copy">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentCopy" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Paste" Command="Paste">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="ContentPaste"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="textFieldBoxBorder"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0 0 0 3"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                            
                                    Padding="0 2 0 4">
                                        <Grid x:Name="textFieldGrid"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                  />
                                            <materialDesign:SmartHint x:Name="Hint"
                                                   Hint="{Binding Path=(materialDesign:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                                   HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters1:HintProxyFabricConverter.Instance}}"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Padding="{TemplateBinding Padding}"
                                                   HintOpacity="{Binding Path=(materialDesign:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                   UseFloating="{Binding Path=(materialDesign:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                                   FloatingScale="{Binding Path=(materialDesign:HintAssist.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                                   FloatingOffset="{Binding Path=(materialDesign:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"                                               
                                                   />
                                        </Grid>
                                    </Border>
                                    <Line x:Name="DashedLine" VerticalAlignment="Bottom" Visibility="Hidden"
                                  StrokeThickness="1.25" StrokeDashArray="1,2.5" StrokeDashCap="Round"
                                  X1="0" X2="{Binding ActualWidth, ElementName=border}" Y1="0" Y2="0" 
                                  Stroke="{TemplateBinding BorderBrush}" Opacity="0.56" />
                                    <materialDesign:Underline x:Name="Underline" Visibility="{Binding Path=(materialDesign:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="materialDesign:HintAssist.IsFloating" Value="True" />
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                    <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                                </MultiTrigger>
                                <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                                    <Setter TargetName="border" Property="Margin" Value="0 12 0 0" />
                                </Trigger>
                                <Trigger Property="materialDesign:TextFieldAssist.HasTextFieldBox" Value="True">
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}" />
                                    <Setter TargetName="textFieldBoxBorder" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                                    <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    <Setter TargetName="Underline" Property="CornerRadius" Value="0,0,4,4" />
                                    <Setter TargetName="Hint" Property="Margin" Value="0,0,0,16" />
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                                </Trigger>
                                <Trigger Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True">
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="textFieldBoxBorder" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Padding" Value="0,8,0,0" />
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-1" />
                                    <Setter TargetName="textFieldGrid" Property="Margin" Value="16,0,16,0" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="0" />
                                    <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Hint" Property="Margin" Value="0,0,0,16" />
                                    <Setter TargetName="PART_ContentHost" Property="Margin" Value="0,8,0,8" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="border" Value="0.42"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="False" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextFieldBox" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="DashedLine" Property="Visibility" Value="Visible" />
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Validation.HasError" Value="True" />
                                        <Condition Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="textFieldBoxBorder" Property="Margin" Value="-2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderThickness" Value="2" />
                                    <Setter TargetName="textFieldBoxBorder" Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="MaterialDesignFloatingHintTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
            </Style>

            <Style x:Key="MaterialDesignTextFieldBoxTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="materialDesign:TextFieldAssist.HasTextFieldBox" Value="True" />
            </Style>

            <Style x:Key="MaterialDesignTextAreaTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="materialDesign:TextFieldAssist.HasTextAreaBox" Value="True" />
            </Style>














            <Style x:Key="MaterialDesignDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0 0 0 0" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Margin" Value="13,4,0,0"/>
                <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                            <Grid>
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="WatermarkBrush" Color="{TemplateBinding Foreground}"/>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="WatermarkStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unwatermarked"/>
                                        <VisualState x:Name="Watermarked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To=".23" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="Focused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <materialDesign:SmartHint x:Name="Hint"
                                                              FontSize="{TemplateBinding FontSize}"
                                                              UseFloating="{Binding Path=(materialDesign:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"
                                                              Hint="{Binding Path=(materialDesign:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                                              HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters1:HintProxyFabricConverter.Instance}}"
                                                              HintOpacity="{Binding Path=(materialDesign:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Border CornerRadius="18"/>
                                    <ContentControl x:Name="PART_Watermark" 
                                                    Focusable="False"
                                                    IsHitTestVisible="False" 
                                                    Opacity="0" 
                                                    Visibility="Collapsed" />
                                    <ScrollViewer x:Name="PART_ContentHost" 
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                                        <Condition Property="IsKeyboardFocused" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                    <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MaterialDesignDatePickerCalendarPortrait" TargetType="{x:Type Calendar}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                <Setter Property="CalendarDayButtonStyle" Value="{StaticResource MaterialDesignCalendarDayButton}" />
                <Setter Property="CalendarButtonStyle" Value="{StaticResource MaterialDesignCalendarButton}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                <Border Padding="110 8 16 24">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="15" Direction="290" Color="#FFB9B9B9"/>
                                    </Border.Effect>
                                    <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Style="{DynamicResource MaterialDesignCalendarItemPortrait}"/>
                                </Border>
                            </AdornerDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MaterialDesignDatePicker" TargetType="{x:Type DatePicker}">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                <Setter Property="Background" Value="White"/>
                <Setter Property="CalendarStyle" Value="{StaticResource MaterialDesignDatePickerCalendarPortrait}"/>
                <Setter Property="IsTodayHighlighted" Value="True"/>
                <Setter Property="SelectedDateFormat" Value="Short"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        x:Name="border"
                                        CornerRadius="18"
                                        Padding="0 4 0 4">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To=".56" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Root"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="PART_Root"
                                          Width="540"
                                          Margin="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Background="White">
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Background="Transparent">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver"/>
                                                            <VisualState x:Name="Pressed"/>
                                                            <VisualState x:Name="Disabled"/>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Viewbox>
                                                        <Canvas Width="15" Height="15" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,13,0">
                                                            <Path Data="M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z" 
                                                                  Fill="{TemplateBinding Foreground}" />
                                                        </Canvas>
                                                    </Viewbox>
                                                </Grid>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button x:Name="PART_Button"
                                                Grid.Column="1"
                                                Foreground="{TemplateBinding BorderBrush}"
                                                Focusable="False"
                                                HorizontalAlignment="Right"
                                                Margin="4 0 0 -3"
                                                Grid.Row="0"
                                                Template="{StaticResource DropDownButtonTemplate}" 
                                                Padding="0"
					    				        Height="17" />
                                        <DatePickerTextBox x:Name="PART_TextBox"
                                                           Grid.Column="0"
                                                           Focusable="{TemplateBinding Focusable}"
                                                           HorizontalContentAlignment="Stretch"
                                                           Grid.Row="0"
                                                           VerticalContentAlignment="Center"
                                                           Style="{DynamicResource MaterialDesignDatePickerTextBox}"
					    						           HorizontalAlignment="Stretch" />
                                        <Popup x:Name="PART_Popup" 
                                               AllowsTransparency="True" 
                                               Placement="Custom"
                                               CustomPopupPlacementCallback="{x:Static materialDesign:CustomPopupPlacementCallbackHelper.LargePopupCallback}"
                                               PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"
					    			           PopupAnimation="Fade"  />
                                    </Grid>
                                </Border>
                                <materialDesign:Underline x:Name="Underline" Visibility="{Binding Path=(materialDesign:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                                    <Setter Property="BorderBrush"  Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}"/>
                                    <Setter TargetName="Underline" Property="Background" Value="{DynamicResource ValidationErrorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MaterialDesignFloatingHintDatePicker" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MaterialDesignDatePicker}">
                <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
            </Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>